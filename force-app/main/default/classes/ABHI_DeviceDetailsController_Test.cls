/**
 * @description       : Test Class for ABHI_DeviceDetailsController
 * @author            : Amrit Preet Singh
 * @group             : 
 * @last modified on  : 06/08/2024
 * @last modified by  : Amrit Preet Singh
 * Modifications Log
 * Ver   Date         Author                            Modification
 * 1.0   08-06-2024   amritpreet.singh@salesforce.com   Initial Version
**/
@isTest
public class ABHI_DeviceDetailsController_Test {
    @TestSetup
    static void makeData(){
        Profile abhilProfile = [SELECT id, name from Profile where name = 'ABHI Base Profile'];
        
        User testUser = new User(
            IsActive = true,
            Business_Unit__c='ABHI',
            FirstName = 'Test',
            LastName='User ABHI',
            Username='abhitestuser@test.com',
            Email='abhitestuser@test.com',
            Alias = 'atus',
            EmailEncodingKey='UTF-8',
            LanguageLocaleKey='en_US',
            LocaleSidKey='en_US', 
            ProfileId = abhilProfile.Id, 
            TimeZoneSidKey='America/Los_Angeles'
        );
        insert testUser; 
        PermissionSetGroup psg = [SELECT id from PermissionSetGroup where DeveloperName = 'ABHI_Users_PSG'];
        PermissionSetAssignment psa = new PermissionSetAssignment(AssigneeId = testUser.Id, PermissionSetGroupId = psg.Id);
        insert psa;
        System.runAs(testUser){
            Account acc = new Account( 
                Name='testAcc',
                Client_Code__c = '1234');
            insert acc;
        }
    }

    @isTest
    static void testgetDeviceDetails() {
        Account acc = [SELECT id, Client_Code__c from Account where Name = 'testAcc' LIMIT 1];
        User testUser = [SELECT id from User where LastName='User ABHI' LIMIT 1];
        // Set mock callout class
        Test.setMock(HttpCalloutMock.class, new ABHI_DeviceDetailsMockHttpResponse());
        System.runAs(testUser){
            Test.startTest();
            ABHI_DeviceDetailsController.ResponseWrapper res= ABHI_DeviceDetailsController.getDeviceDetails(acc.Id);
            Test.stopTest();
            System.assertEquals(200, res.StatusCode, 'code');
            System.assertEquals('Success', res.Message, 'Message');
        }
    }
    @isTest
    static void testgetFailureDeviceDetails() {
        Account acc = [SELECT id, Client_Code__c from Account where Name = 'testAcc' LIMIT 1];
        User testUser = [SELECT id from User where LastName='User ABHI' LIMIT 1];
        // Set mock callout class
        Test.setMock(HttpCalloutMock.class, new ABHI_DeviceDetailsFailureResponseGenerator());
        System.runAs(testUser){
            Test.startTest();
            ABHI_DeviceDetailsController.ResponseWrapper res= ABHI_DeviceDetailsController.getDeviceDetails(acc.Id);
            Test.stopTest();
            System.assertEquals(400, res.StatusCode, 'code');
        }
    }

     /**
    * @description  Mocking success response
    */ 
    public class ABHI_DeviceDetailsMockHttpResponse implements HttpCalloutMock {
        /**
            * @description  Mocking success response
            * @param req
            ** @return HTTPResponse
        */ 
        public HTTPResponse respond(HTTPRequest req) {
            HttpResponse res = new HttpResponse();
            res.setHeader('Content-Type', 'application/json');
            String s = '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';
            res.setBody(s);
            res.setStatusCode(200);
            return res;
        }
    }

     /**
    * @description Mocking failure response
    */ 
    public class ABHI_DeviceDetailsFailureResponseGenerator implements HttpCalloutMock {
        /**
            * @description  Mocking failure response
            * @param req
            ** @return HTTPResponse
        */ 
        public HTTPResponse respond(HTTPRequest req) {
            HttpResponse res = new HttpResponse();
            res.setHeader('Content-Type', 'application/json');
			String s = '75CM7LVrU2UnMeEVyQ3tBoUIWTcVx5wmee3lNYSvURd52JPIKLXsBlGr4naUDSKRKuycpJlnwwakr6SPcRiGdQ==';
            res.setBody(s);
            res.setStatusCode(400);
            return res;
        }
    }
}