/*********************************************************
*Class        :  Asf_NpsIndicatiorController
*Description  :  Controller class for asf_NdcIndicator LWC
*********************************************************/

public without sharing class Asf_NpsIndicatiorController {
   
    /****************************************************************************************************************
    * @LOB - ALL
    * @Function - genericFetchQuery
    * @param fields - List of fields
    * @param objectName - Object Name
    * @param whereClause - WHERE cluase used in the query.
    * @return - List<SObject>
    * @Description - Generic query to fetch the sobject records.
    *****************************************************************************************************************/
    @AuraEnabled
    public static List<SObject> genericFetchQuery(String fields, String objectName, String whereClause) {
        String query = 'SELECT ' + fields + ' FROM ' + objectName + ' ' + whereClause;
        system.debug('inside genericFetchQuery query '+query);
        List<SObject> sobjList = Database.query(String.valueOf(query));
        return sobjList;
    }
    @AuraEnabled(Cacheable = true)
    public static decimal getNpsScore(string customerId) {
        List<Survey_Response__c> surveyResp = [SELECT ID,Primary_Question_NPS__c FROM Survey_Response__c WHERE Client_Code__c =: customerId ORDER BY CreatedDate DESC LIMIT 1];
        if(!surveyResp.isEmpty() && surveyResp[0].Primary_Question_NPS__c !=null){
        	return surveyResp[0].Primary_Question_NPS__c;
        }
        else {
            return 0;
        }
    }
}